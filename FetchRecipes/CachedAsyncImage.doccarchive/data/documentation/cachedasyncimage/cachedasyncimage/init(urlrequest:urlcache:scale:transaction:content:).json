{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"urlRequest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLRequest","preciseIdentifier":"s:10Foundation10URLRequestV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"urlCache"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLCache","preciseIdentifier":"c:objc(cs)NSURLCache"},{"kind":"text","text":" = .shared, "},{"kind":"externalParam","text":"scale"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":" = 1, "},{"kind":"externalParam","text":"transaction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Transaction","preciseIdentifier":"s:7SwiftUI11TransactionV"},{"kind":"text","text":" = Transaction(), "},{"kind":"attribute","text":"@"},{"kind":"typeIdentifier","text":"ViewBuilder","preciseIdentifier":"s:7SwiftUI11ViewBuilderV"},{"kind":"text","text":" "},{"kind":"externalParam","text":"content"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"AsyncImagePhase","preciseIdentifier":"s:7SwiftUI15AsyncImagePhaseO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Content","preciseIdentifier":"s:16CachedAsyncImageAAV7Contentxmfp"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"urlRequest","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The URL request of the image to display."}]}]},{"name":"urlCache","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The URL cache for providing cached responses to requests within the session."}]}]},{"name":"scale","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The scale to use for the image. The default is "},{"type":"codeVoice","code":"1"},{"type":"text","text":". Set a"},{"type":"text","text":" "},{"type":"text","text":"different value when loading images designed for higher resolution"},{"type":"text","text":" "},{"type":"text","text":"displays. For example, set a value of "},{"type":"codeVoice","code":"2"},{"type":"text","text":" for an image that you"},{"type":"text","text":" "},{"type":"text","text":"would name with the "},{"type":"codeVoice","code":"@2x"},{"type":"text","text":" suffix if stored in a file on disk."}]}]},{"name":"transaction","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The transaction to use when the phase changes."}]}]},{"name":"content","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes the load phase as an input, and"},{"type":"text","text":" "},{"type":"text","text":"returns the view to display for the specified phase."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you set the asynchronous image’s URL to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", or after you set the"},{"type":"text","text":" "},{"type":"text","text":"URL to a value but before the load operation completes, the phase is"},{"type":"text","text":" "},{"type":"codeVoice","code":"AsyncImagePhase\/empty"},{"type":"text","text":". After the operation completes, the phase"},{"type":"text","text":" "},{"type":"text","text":"becomes either "},{"type":"codeVoice","code":"AsyncImagePhase\/failure(_:)"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"codeVoice","code":"AsyncImagePhase\/success(_:)"},{"type":"text","text":". In the first case, the phase’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"AsyncImagePhase\/error"},{"type":"text","text":" value indicates the reason for failure."},{"type":"text","text":" "},{"type":"text","text":"In the second case, the phase’s "},{"type":"codeVoice","code":"AsyncImagePhase\/image"},{"type":"text","text":" property"},{"type":"text","text":" "},{"type":"text","text":"contains the loaded image. Use the phase to drive the output of the"},{"type":"text","text":" "},{"type":"codeVoice","code":"content"},{"type":"text","text":" closure, which defines the view’s appearance:"}]},{"type":"codeListing","syntax":null,"code":["CachedAsyncImage(url: URL(string: \"https:\/\/example.com\/icon.png\")) { phase in","    if let image = phase.image {","        image \/\/ Displays the loaded image.","    } else if phase.error != nil {","        Color.red \/\/ Indicates an error.","    } else {","        Color.blue \/\/ Acts as a placeholder.","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To add transitions when you change the URL, apply an identifier to the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/CachedAsyncImage\/documentation\/CachedAsyncImage"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/cachedasyncimage\/cachedasyncimage\/init(urlrequest:urlcache:scale:transaction:content:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/CachedAsyncImage\/documentation\/CachedAsyncImage\/CachedAsyncImage\/init(urlRequest:urlCache:scale:transaction:content:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Loads and displays a modifiable image from the specified URL in phases."}],"kind":"symbol","metadata":{"role":"symbol","title":"init(urlRequest:urlCache:scale:transaction:content:)","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"urlRequest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLRequest","preciseIdentifier":"s:10Foundation10URLRequestV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"urlCache"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLCache","preciseIdentifier":"c:objc(cs)NSURLCache"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scale"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transaction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Transaction","preciseIdentifier":"s:7SwiftUI11TransactionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"content"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"AsyncImagePhase","preciseIdentifier":"s:7SwiftUI15AsyncImagePhaseO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Content","preciseIdentifier":"s:16CachedAsyncImageAAV7Contentxmfp"},{"kind":"text","text":")"}],"symbolKind":"init","externalID":"s:16CachedAsyncImageAAV10urlRequest0D5Cache5scale11transaction7contentAByxG10Foundation10URLRequestVSg_So10NSURLCacheC04CoreJ07CGFloatV7SwiftUI11TransactionVxAR0bC5PhaseOctcfc","modules":[{"name":"CachedAsyncImage"}],"platforms":[{"beta":false,"unavailable":false,"name":"iOS","introducedAt":"15.0","deprecated":false},{"beta":false,"unavailable":false,"name":"macOS","introducedAt":"12.0","deprecated":false},{"beta":false,"unavailable":false,"name":"tvOS","introducedAt":"15.0","deprecated":false},{"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"8.0","deprecated":false}]},"hierarchy":{"paths":[["doc:\/\/CachedAsyncImage\/documentation\/CachedAsyncImage","doc:\/\/CachedAsyncImage\/documentation\/CachedAsyncImage\/CachedAsyncImage"]]},"references":{"doc://CachedAsyncImage/documentation/CachedAsyncImage/CachedAsyncImage":{"role":"symbol","title":"CachedAsyncImage","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CachedAsyncImage"}],"abstract":[{"type":"text","text":"A view that asynchronously loads, cache and displays an image."}],"identifier":"doc:\/\/CachedAsyncImage\/documentation\/CachedAsyncImage\/CachedAsyncImage","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CachedAsyncImage"}],"url":"\/documentation\/cachedasyncimage\/cachedasyncimage"},"doc://CachedAsyncImage/documentation/CachedAsyncImage/CachedAsyncImage/init(urlRequest:urlCache:scale:transaction:content:)":{"role":"symbol","title":"init(urlRequest:urlCache:scale:transaction:content:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"urlRequest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLRequest","preciseIdentifier":"s:10Foundation10URLRequestV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"urlCache"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLCache","preciseIdentifier":"c:objc(cs)NSURLCache"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scale"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transaction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Transaction","preciseIdentifier":"s:7SwiftUI11TransactionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"content"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"AsyncImagePhase","preciseIdentifier":"s:7SwiftUI15AsyncImagePhaseO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Content","preciseIdentifier":"s:16CachedAsyncImageAAV7Contentxmfp"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Loads and displays a modifiable image from the specified URL in phases."}],"identifier":"doc:\/\/CachedAsyncImage\/documentation\/CachedAsyncImage\/CachedAsyncImage\/init(urlRequest:urlCache:scale:transaction:content:)","kind":"symbol","type":"topic","url":"\/documentation\/cachedasyncimage\/cachedasyncimage\/init(urlrequest:urlcache:scale:transaction:content:)"},"doc://CachedAsyncImage/documentation/CachedAsyncImage":{"role":"collection","title":"CachedAsyncImage","abstract":[],"identifier":"doc:\/\/CachedAsyncImage\/documentation\/CachedAsyncImage","kind":"symbol","type":"topic","url":"\/documentation\/cachedasyncimage"}}}